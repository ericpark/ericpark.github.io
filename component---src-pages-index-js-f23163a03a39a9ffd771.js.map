{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/components/slider.js","webpack:///./src/components/rotator.js","webpack:///./src/components/headline.js","webpack:///./src/components/bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["postCard","props","react_default","a","createElement","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","boxShadow","margin","gatsby_browser_entry","to","fields","slug","title","slider","_ref","items","color","& span","animation","topToBottom","opacity","map","item","key","css","keyframes","0%","6%","21%","69%","84%","90%","100%","Component","bioQuery","Bio","query","render","data","padding","textAlign","_2760998521","BlogIndex","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","layout","seo","keywords","gatsby_image_default","smallPic","description","href","logo","bio","_ref2","__webpack_exports__","pages_BlogIndex","Object","assign","_1758148103","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Layout","_this$props","this","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","aria-label","role","aria-controls","id","class","target","rel","Date","getFullYear","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-f23163a03a39a9ffd771.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"gatsby\"\n\nexport default (props) => (\n  <article\n    className={`post-card ${props.count%3===0&& `post-card-large`} ${props.postClass} ${\n      props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n    }`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n        margin: '5px 0px 5px 0px',\n   \n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">{props.node.frontmatter.title || props.node.fields.slug}</h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { keyframes } from \"@emotion/core\"\n\nexport default ({ items, color }) => (\n  <span\n    style={{\n      \"& span\": {\n        animation: `${topToBottom} 5s easeIn infinite 5s`,\n        opacity: 0,\n      },\n    }}\n  >\n    {items.map(item => (\n      <span key={item} css={{ color }}>\n        {item}\n      </span>\n    ))}\n  </span>\n)\n\nconst topToBottom = keyframes({\n  \"0%\": {\n    opacity: 0,\n  },\n  \"6%\": {\n    opacity: 0,\n  },\n  \"21%\": {\n    opacity: 1,\n  },\n  \"69%\": {\n    opacity: 1,\n  },\n  \"84%\": {\n    opacity: 0,\n  },\n  \"90%\": {\n    opacity: 0,\n  },\n  \"100%\": {\n    opacity: 0,\n  },\n})","import React, { Component } from \"react\"\nimport Slider from \"./slider\"\nimport Link from \"gatsby-link\"\n\nclass Rotator extends Component {\n  state = {\n    shouldAnimate: true,\n    item: 0,\n    size: {},\n  }\n  sliderContainer = React.createRef()\n  intervalId = null\n\n  _clearInterval() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId)\n      this.intervalId = null\n    }\n  }\n\n  decrementItem = () => {\n    this._clearInterval()\n    this.setState({\n      item:\n        (this.state.item + this.props.items.length - 1) %\n        this.props.items.length,\n    })\n  }\n\n  incrementItemAndClearInterval = () => {\n    this._clearInterval()\n    this.incrementItem()\n  }\n\n  incrementItem = () => {\n    this.setState(state => {\n      return {\n        item: (state.item + 1) % this.props.items.length,\n      }\n    })\n  }\n\n  componentDidMount() {\n    const shouldAnimate = this.shouldAnimate()\n    if (shouldAnimate) {\n      requestAnimationFrame(() => {\n        this.intervalId = setInterval(this.incrementItem, 5000)\n        this.setState({ shouldAnimate, size: this.getDimensions() })\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.shouldAnimate && prevState.item !== this.state.item) {\n      requestAnimationFrame(() => {\n        this.setState({ size: this.getDimensions() })\n      })\n    }\n  }\n\n  getDimensions() {\n    if (this.sliderContainer.current === null) {\n      return {\n        width: `auto`,\n        height: `auto`,\n      }\n    }\n\n    return this.sliderContainer.current.getBoundingClientRect()\n  }\n\n  shouldAnimate() {\n    const mediaQuery = window.matchMedia(`(prefers-reduced-motion)`)\n    return !mediaQuery || !mediaQuery.matches\n  }\n\n  render() {\n    const { shouldAnimate } = this.state\n    const { text, workName } = this.props.items[this.state.item]\n    const enableSlider = shouldAnimate && this.intervalId\n\n    return (\n      <div\n        style={{\n          padding: '5rem 0rem',\n          margin: '1rem 1rem',\n          position: 'relative',\n        }}>\n        <div\n          aria-live={this.intervalId ? `off` : `polite`}\n          aria-atomic=\"true\"\n          aria-relevant=\"all\"\n        >\n          <p\n            style={{\n              fontSize: \"1.25rem\",\n              fontFamily: `\"Futura PT\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"`,\n              textAlign: `left`,\n              marginBottom: 0,\n            }}\n          >\n            {/*<span><Link to={`/packages/` + pluginName}>a plugin</Link>&nbsp;</span>*/}\n            <span\n              style={{\n                display: `inline-block`,\n                transition: shouldAnimate ? `width 150ms easeIn` : `none`,\n                width: this.state.size.width || `auto`,\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: 600,\n                  whiteSpace: `nowrap`,\n                  display: `inline-block`,\n                }}\n                id=\"headline-slider\"\n                ref={this.sliderContainer}\n              >\n                {!enableSlider ? (\n                  <>{text}</>\n                ) : (\n                  <Slider items={[text]} />\n                )}\n              </span>\n            </span>\n          </p>\n\n          <p\n            style={{\n              color: 'black',\n              margin: 0,\n              fontSize: `1.25rem`,\n              textAlign: `left`,\n            }}\n          >\n            <Link to={`/experience/` + workName}>#HowIGotHere</Link>\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Rotator\n","/**\n * Headline component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Rotator from \"./rotator\"\n\n\nfunction Headline() {\n  return (\n    <StaticQuery\n      query={headlineQuery}\n      render={data => {\n        return (\n          <Rotator\n              items={[\n                {\n                  text: `dry cleaner`,\n                  workName: ``,\n                },\n                {\n                  text: `campaign staff member`,\n                  workName: ``,\n                },\n                {\n                  text: `solutions consultant`,\n                  workName: ``,\n                },\n                {\n                  text: `front end developer`,\n                  workName: ``,\n                },   \n                {\n                  text: `iOS developer`,\n                  workName: ``,\n                },\n                {\n                  text: `IT consultant`,\n                  workName: ``,\n                },\n                {\n                  text: `head volunteer`,\n                  workName: ``,\n                },\n                {\n                  text: `fried chicken server`,\n                  workName: ``,\n                },\n                {\n                  text: `entreprenuer`,\n                  workName: ``,\n                },\n                 {\n                  text: `circuit court intern`,\n                  workName: ``,\n                },\n                 {\n                  text: `volunteer hospital ambassador`,\n                  workName: ``,\n                },\n                {\n                  text: `published medical journal author`,\n                  workName: ``,\n                },\n                {\n                  text: `neurolab volunteer`,\n                  workName: ``,\n                },\n              ]}\n            />\n        )\n      }}\n    />\n  )\n}\n\nconst headlineQuery = graphql`\n  query headlineQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\n\nexport default Headline\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Rotator from \"./rotator\"\n\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        return (\n          <div className=\"post-content-body\"style={{padding: '15vw 0'}}>\n            <div className=\"row\">\n              <div className=\"col-12\" style={{textAlign: 'center'}}>\n                <div style={{padding: '1rem 0', textAlign: 'center', margin: '2 2 2 2', padding: '2 2 2 2'}}>            \n                  <div className=\"post-content-body\">\n                    Eric the _______  \n                    <div style={{padding: '1rem 0', textAlign: 'center', margin: '0vw 10vw'}}>            \n                      <p>\n                        dry cleaner. entrepreneur. campaign staff member. system architect. flutter developer. \n                        solutions consultant. front end developer. caterer. iOS developer. IT consultant. head volunteer.\n                        fried chicken restaurant server. G51 venture scholar. md circuit court intern.  bbq restaurant server. \n                        published medical journal author. smoothie maker. backend engineer. neurolab volunteer. food service manager.  \n                        alumni call center representative. pizza tosser/almost-dropper. volunteer hospital ambassador. \n                        how i met your mother enthusiast.  \n                       </p>\n                       <p>\n                         let's add some more\n                       </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\nimport Headline from \"../components/headline\"\nimport Bio from \"../components/bio\"\nimport Img from \"gatsby-image\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title=\"Home\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n        <figure className=\"kg-header kg-header-image\">\n          <Img fluid={data.smallPic.childImageSharp.fluid} className=\"kg-header-image\" />\n        </figure>\n        <figure className=\"kg-header kg-header-image\">\n          <Img fluid={data.smallPic.childImageSharp.fluid} className=\"kg-header-image\" />\n        </figure>\n        <figure className=\"kg-header kg-header-image\">\n          <Img fluid={data.smallPic.childImageSharp.fluid} className=\"kg-header-image\" />\n        </figure>\n\n      {data.site.siteMetadata.description &&(\n\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n\n          </h2>\n          <p className=\"page-head-description\">system architect, CSSA @ <a href=\"https://www.pega.com/\">pega</a></p>\n          <figure className=\"kg-logo kg-logo-image\">\n            <Img fluid={data.logo.childImageSharp.fluid} className=\"kg-logo-image\" />\n          </figure>\n        </header>\n\n      )}\n      <Bio /> \n      <div className=\"post-feed\" >\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    smallPic: file(relativePath: { eq: \"headerbg.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    smallPicYellow: file(relativePath: { eq: \"headerbg.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1360, duotone: {highlight: \"#ffc04f\", shadow: \"#16f632\", opacity: 50}) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    logo: file(relativePath: { eq: \"logo.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    return (\n      <div className=\"site-wrapper\">\n        <header className=\"site-head\">\n          <div className=\"site-head-container\">\n            <Link className=\"nav-burger\" to={`/`}>\n              <div\n                className=\"hamburger hamburger--collapse\"\n                aria-label=\"Menu\"\n                role=\"button\"\n                aria-controls=\"navigation\"\n              >\n                <div className=\"hamburger-box\">\n                  <div className=\"hamburger-inner\" />\n                </div>\n              </div>\n            </Link>\n            <nav id=\"swup\" class=\"site-head-left\">\n              <ul className=\"nav\" role=\"menu\">\n                <li className=\"nav-home nav-current\" role=\"menuitem\">\n                  <Link to={`/`}>Home</Link>\n                </li>\n                <li className=\"nav-about\" role=\"menuitem\">\n                  <Link to={`/about`}>About</Link>\n                </li>\n                <li className=\"nav-elements\" role=\"menuitem\">\n                  {/*<Link to={`/elements`}>Contact</Link>*/}\n                  <a href=\"mailto:eric@ericspark.com\">Contact</a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"site-head-center\">\n              <Link className=\"site-head-logo\" to={`/`}>\n                {title}\n              </Link>\n            </div>\n            <div className=\"site-head-right\">\n              <div className=\"social-links\">\n                <a\n                  href=\"https://www.github.com/ericpark\"\n                  title=\"Github\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Github\n                </a>\n                <a\n                  href=\"https://linkedin.com/in/ericspark\"\n                  title=\"Linkedin\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Linkedin\n                </a>\n                <a\n                  href=\"https://www.instagram.com/avgazn/\"\n                  title=\"Instagram\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Instagram\n                </a>\n              </div>\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\">\n          <div id=\"swup\" className=\"transition-fade\">\n            {children}\n          </div>\n        </main>\n        <footer className=\"site-foot\">\n          &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link>{\" \"}\n          &mdash; Built with{\" \"}\n          <a\n            href=\"https://gatsbyjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatsby\n          </a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}