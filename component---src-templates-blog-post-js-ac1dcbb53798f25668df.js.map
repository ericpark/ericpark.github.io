{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","React","createElement","Layout","location","SEO","frontmatter","description","excerpt","className","thumbnail","class","Img","fluid","childImageSharp","alt","dangerouslySetInnerHTML","__html","html","Component"],"mappings":"qLAKoC,IAE9BA,EAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA8CnB,OA9CmBC,YAAAJ,EAAAC,GAAAD,EAAAK,UACpBC,OAAA,WACE,MAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAEpD,OACEC,IAAAC,cAACC,IAAM,CAACC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5CI,IAAAC,cAACG,IAAG,CACFL,MAAOR,EAAKc,YAAYN,MACxBO,YAAaf,EAAKc,YAAYC,aAAef,EAAKgB,UAEpDP,IAAAC,cAAA,WACEO,UAAY,iBAAejB,EAAKc,YAAYI,WAAc,aAE1DT,IAAAC,cAAA,UAAQO,UAAU,uBAChBR,IAAAC,cAAA,MAAIO,UAAU,sBAAsBjB,EAAKc,YAAYN,QAGtDR,EAAKc,YAAYC,aAChBN,IAAAC,cAAA,KAAGS,MAAM,wBAAwBnB,EAAKc,YAAYC,aAGnDf,EAAKc,YAAYI,WAChBT,IAAAC,cAAA,OAAKO,UAAU,sBACbR,IAAAC,cAACU,IAAG,CACFH,UAAU,WACVI,MAAOrB,EAAKc,YAAYI,UAAUI,gBAAgBD,MAClDE,IAAKvB,EAAKc,YAAYN,SAK5BC,IAAAC,cAAA,OACEO,UAAU,oBACVO,wBAAyB,CAAEC,OAAQzB,EAAK0B,QAG1CjB,IAAAC,cAAA,UAAQO,UAAU,2BASzBxB,EA9CmB,CAASgB,IAAMkB,WAiDtBlC","file":"component---src-templates-blog-post-js-ac1dcbb53798f25668df.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article\n          className={`post-content ${post.frontmatter.thumbnail || `no-image`}`}\n        >\n          <header className=\"post-content-header\">\n            <h1 className=\"post-content-title\">{post.frontmatter.title}</h1>\n          </header>\n\n          {post.frontmatter.description && (\n            <p class=\"post-content-excerpt\">{post.frontmatter.description}</p>\n          )}\n\n          {post.frontmatter.thumbnail && (\n            <div className=\"post-content-image\">\n              <Img\n                className=\"kg-image\"\n                fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\n                alt={post.frontmatter.title}\n              />\n            </div>\n          )}\n\n          <div\n            className=\"post-content-body\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <footer className=\"post-content-footer\">\n            {/* There are two options for how we display the byline/author-info.\n        If the post has more than one author, we load a specific template\n        from includes/byline-multiple.hbs, otherwise, we just use the\n        default byline. */}\n          </footer>\n        </article>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1360) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}